name: CI-CD

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: forif-web
  RESOURCE_PATH: ./src/main/resources/application.yaml
  CODE_DEPLOY_APPLICATION_NAME: forif-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: forif-server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yaml
        env:
          override.value: 'from deploy.yaml'
          spring.datasource.username: ${{secrets.RDS_USERNAME}}
          spring.datasource.password: ${{secrets.RDS_PASSWORD}}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip . -x "*.git*"
        shell: bash

      - name: Add appspec.yml and scripts
        run: |
          mkdir -p scripts
          echo "version: 0.0\nos: linux\nfiles:\n  - source: /\n    destination: /home/ubuntu/github_action/\nhooks:\n  AfterInstall:\n    - location: scripts/deploy.sh\n      timeout: 300\n      runas: ubuntu\n  ApplicationStop:\n    - location: scripts/stop_server.sh\n      timeout: 300\n      runas: ubuntu\n  ApplicationStart:\n    - location: scripts/start_server.sh\n      timeout: 300\n      runas: ubuntu" > appspec.yml
          echo "#!/bin/bash\nPROJECT_NAME=\"github_action\"\nJAR_PATH=\"/home/ubuntu/github_action/build/libs/*.jar\"\nDEPLOY_PATH=/home/ubuntu/\$PROJECT_NAME/\nDEPLOY_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/deploy.log\"\nDEPLOY_ERR_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/deploy_err.log\"\nAPPLICATION_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/application.log\"\nBUILD_JAR=\$(ls \$JAR_PATH)\nJAR_NAME=\$(basename \$BUILD_JAR)\n\necho \"===== 배포 시작 : \$(date +%c) =====\" >> \$DEPLOY_LOG_PATH\n\necho \"> build 파일명: \$JAR_NAME\" >> \$DEPLOY_LOG_PATH\necho \"> build 파일 복사\" >> \$DEPLOY_LOG_PATH\ncp \$BUILD_JAR \$DEPLOY_PATH" > scripts/deploy.sh
          echo "#!/bin/bash\nPROJECT_NAME=\"github_action\"\nDEPLOY_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/deploy.log\"\n\necho \"> 현재 동작중인 어플리케이션 pid 체크\" >> \$DEPLOY_LOG_PATH\nCURRENT_PID=\$(pgrep -f \$JAR_NAME)\n\nif [ -z \$CURRENT_PID ]\nthen\n  echo \"> 현재 동작중인 어플리케이션 존재 X\" >> \$DEPLOY_LOG_PATH\nelse\n  echo \"> 현재 동작중인 어플리케이션 존재 O\" >> \$DEPLOY_LOG_PATH\n  echo \"> 현재 동작중인 어플리케이션 강제 종료 진행\" >> \$DEPLOY_LOG_PATH\n  echo \"> kill -9 \$CURRENT_PID\" >> \$DEPLOY_LOG_PATH\n  kill -9 \$CURRENT_PID\nfi" > scripts/stop_server.sh
          echo "#!/bin/bash\nPROJECT_NAME=\"github_action\"\nDEPLOY_PATH=/home/ubuntu/\$PROJECT_NAME/\nDEPLOY_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/deploy.log\"\nDEPLOY_ERR_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/deploy_err.log\"\nAPPLICATION_LOG_PATH=\"/home/ubuntu/\$PROJECT_NAME/application.log\"\nJAR_NAME=\$(basename \$(ls \$DEPLOY_PATH/*.jar))\n\necho \"> DEPLOY_JAR 배포\" >> \$DEPLOY_LOG_PATH\nnohup java -jar -Dspring.profiles.active=local \$DEPLOY_PATH\$JAR_NAME --server.port=8080 >> \$APPLICATION_LOG_PATH 2> \$DEPLOY_ERR_LOG_PATH &\n\nsleep 3\n\necho \"> 배포 종료 : \$(date +%c)\" >> \$DEPLOY_LOG_PATH" > scripts/start_server.sh
          chmod +x scripts/*.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip